-- MySQL Script generated by MySQL Workbench
-- Fri Apr 17 18:34:44 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema horadoevento
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema horadoevento
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `horadoevento` DEFAULT CHARACTER SET utf8 ;
USE `horadoevento` ;

-- -----------------------------------------------------
-- Table `horadoevento`.`certificado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `horadoevento`.`certificado` (
  `id_certificado` INT NOT NULL,
  `quantidade_horas` VARCHAR(4) NOT NULL,
  PRIMARY KEY (`id_certificado`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `horadoevento`.`empresa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `horadoevento`.`empresa` (
  `cnpj` INT(14) NOT NULL,
  `username` VARCHAR(30) NOT NULL,
  `nome` VARCHAR(255) NOT NULL,
  `cidade` VARCHAR(50) NOT NULL,
  `pais` VARCHAR(50) NOT NULL,
  `senha` VARCHAR(100) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `linkedin` VARCHAR(100) NULL,
  `foto` LONGBLOB NOT NULL,
  `evento_id_evento` INT NOT NULL,
  `evento_certificado_id_certificado` INT NOT NULL,
  `evento_empresa_cnpj` INT(14) NOT NULL,
  PRIMARY KEY (`cnpj`, `evento_id_evento`, `evento_certificado_id_certificado`, `evento_empresa_cnpj`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `linkedin_UNIQUE` (`linkedin` ASC) VISIBLE,
  INDEX `fk_empresa_evento1_idx` (`evento_id_evento` ASC, `evento_certificado_id_certificado` ASC, `evento_empresa_cnpj` ASC) VISIBLE,
  CONSTRAINT `fk_empresa_evento1`
    FOREIGN KEY (`evento_id_evento` , `evento_certificado_id_certificado` , `evento_empresa_cnpj`)
    REFERENCES `horadoevento`.`evento` (`id_evento` , `certificado_id_certificado` , `empresa_cnpj`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `horadoevento`.`evento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `horadoevento`.`evento` (
  `id_evento` INT NOT NULL,
  `data` DATETIME NOT NULL,
  `localizacao` VARCHAR(255) NOT NULL,
  `descricao` LONGTEXT NOT NULL,
  `duracao` VARCHAR(45) NOT NULL,
  `quantidade_vagas` VARCHAR(45) NOT NULL,
  `palestrantes` VARCHAR(255) NOT NULL,
  `titulo` VARCHAR(255) NOT NULL,
  `certificado_id_certificado` INT NOT NULL,
  `empresa_cnpj` INT(14) NOT NULL,
  PRIMARY KEY (`id_evento`, `certificado_id_certificado`, `empresa_cnpj`),
  INDEX `fk_evento_certificado1_idx` (`certificado_id_certificado` ASC) VISIBLE,
  INDEX `fk_evento_empresa1_idx` (`empresa_cnpj` ASC) VISIBLE,
  CONSTRAINT `fk_evento_certificado1`
    FOREIGN KEY (`certificado_id_certificado`)
    REFERENCES `horadoevento`.`certificado` (`id_certificado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_evento_empresa1`
    FOREIGN KEY (`empresa_cnpj`)
    REFERENCES `horadoevento`.`empresa` (`cnpj`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `horadoevento`.`tag_evento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `horadoevento`.`tag_evento` (
  `id_tag_evento` INT NOT NULL,
  `evento_id_evento` INT NOT NULL,
  `evento_certificado_id_certificado` INT NOT NULL,
  `evento_empresa_cnpj` INT(14) NOT NULL,
  PRIMARY KEY (`id_tag_evento`, `evento_id_evento`, `evento_certificado_id_certificado`, `evento_empresa_cnpj`),
  INDEX `fk_tag_evento_evento1_idx` (`evento_id_evento` ASC, `evento_certificado_id_certificado` ASC, `evento_empresa_cnpj` ASC) VISIBLE,
  CONSTRAINT `fk_tag_evento_evento1`
    FOREIGN KEY (`evento_id_evento` , `evento_certificado_id_certificado` , `evento_empresa_cnpj`)
    REFERENCES `horadoevento`.`evento` (`id_evento` , `certificado_id_certificado` , `empresa_cnpj`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `horadoevento`.`tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `horadoevento`.`tag` (
  `id_tag` INT NOT NULL,
  `nome` VARCHAR(40) NOT NULL,
  `tag_evento_id_tag_evento` INT NOT NULL,
  `tag_evento_evento_id_evento` INT NOT NULL,
  `tag_evento_evento_certificado_id_certificado` INT NOT NULL,
  `tag_evento_evento_empresa_cnpj` INT(14) NOT NULL,
  PRIMARY KEY (`id_tag`, `tag_evento_id_tag_evento`, `tag_evento_evento_id_evento`, `tag_evento_evento_certificado_id_certificado`, `tag_evento_evento_empresa_cnpj`),
  INDEX `fk_tag_tag_evento1_idx` (`tag_evento_id_tag_evento` ASC, `tag_evento_evento_id_evento` ASC, `tag_evento_evento_certificado_id_certificado` ASC, `tag_evento_evento_empresa_cnpj` ASC) VISIBLE,
  CONSTRAINT `fk_tag_tag_evento1`
    FOREIGN KEY (`tag_evento_id_tag_evento` , `tag_evento_evento_id_evento` , `tag_evento_evento_certificado_id_certificado` , `tag_evento_evento_empresa_cnpj`)
    REFERENCES `horadoevento`.`tag_evento` (`id_tag_evento` , `evento_id_evento` , `evento_certificado_id_certificado` , `evento_empresa_cnpj`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `horadoevento`.`tag_usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `horadoevento`.`tag_usuario` (
  `id_tag_usuario` INT NOT NULL,
  `tag_id_tag` INT NOT NULL,
  PRIMARY KEY (`id_tag_usuario`, `tag_id_tag`),
  INDEX `fk_tag_usuario_tag1_idx` (`tag_id_tag` ASC) VISIBLE,
  CONSTRAINT `fk_tag_usuario_tag1`
    FOREIGN KEY (`tag_id_tag`)
    REFERENCES `horadoevento`.`tag` (`id_tag`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `horadoevento`.`inscricao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `horadoevento`.`inscricao` (
  `id_inscricao` INT NOT NULL,
  `evento_id_evento` INT NOT NULL,
  PRIMARY KEY (`id_inscricao`, `evento_id_evento`),
  INDEX `fk_inscricao_evento1_idx` (`evento_id_evento` ASC) VISIBLE,
  CONSTRAINT `fk_inscricao_evento1`
    FOREIGN KEY (`evento_id_evento`)
    REFERENCES `horadoevento`.`evento` (`id_evento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `horadoevento`.`empresa_usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `horadoevento`.`empresa_usuario` (
  `id_empresa_usuario` INT NOT NULL,
  `empresa_cnpj` INT(14) NOT NULL,
  PRIMARY KEY (`id_empresa_usuario`, `empresa_cnpj`),
  INDEX `fk_empresa_usuario_empresa1_idx` (`empresa_cnpj` ASC) VISIBLE,
  CONSTRAINT `fk_empresa_usuario_empresa1`
    FOREIGN KEY (`empresa_cnpj`)
    REFERENCES `horadoevento`.`empresa` (`cnpj`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `horadoevento`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `horadoevento`.`usuario` (
  `cpf` VARCHAR(11) NOT NULL,
  `username` VARCHAR(30) NOT NULL,
  `nome` VARCHAR(255) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `senha` VARCHAR(100) NOT NULL,
  `linkedin` VARCHAR(100) NOT NULL,
  `foto` LONGBLOB NOT NULL,
  `certificado_id_certificado` INT NOT NULL,
  `tag_usuario_id_tag_usuario` INT NOT NULL,
  `inscricao_id_inscricao` INT NOT NULL,
  `certificado_id_certificado1` INT NOT NULL,
  `empresa_usuario_id_empresa_usuario` INT NOT NULL,
  PRIMARY KEY (`cpf`, `certificado_id_certificado`, `tag_usuario_id_tag_usuario`, `inscricao_id_inscricao`, `certificado_id_certificado1`, `empresa_usuario_id_empresa_usuario`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  INDEX `fk_usuario_tag_usuario_idx` (`tag_usuario_id_tag_usuario` ASC) VISIBLE,
  INDEX `fk_usuario_inscricao1_idx` (`inscricao_id_inscricao` ASC) VISIBLE,
  INDEX `fk_usuario_certificado1_idx` (`certificado_id_certificado1` ASC) VISIBLE,
  INDEX `fk_usuario_empresa_usuario1_idx` (`empresa_usuario_id_empresa_usuario` ASC) VISIBLE,
  CONSTRAINT `fk_usuario_tag_usuario`
    FOREIGN KEY (`tag_usuario_id_tag_usuario`)
    REFERENCES `horadoevento`.`tag_usuario` (`id_tag_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_inscricao1`
    FOREIGN KEY (`inscricao_id_inscricao`)
    REFERENCES `horadoevento`.`inscricao` (`id_inscricao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_certificado1`
    FOREIGN KEY (`certificado_id_certificado1`)
    REFERENCES `horadoevento`.`certificado` (`id_certificado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_empresa_usuario1`
    FOREIGN KEY (`empresa_usuario_id_empresa_usuario`)
    REFERENCES `horadoevento`.`empresa_usuario` (`id_empresa_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
